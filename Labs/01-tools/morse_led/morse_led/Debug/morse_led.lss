
morse_led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000029e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000024a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000029e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002d0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000310  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ac8  00000000  00000000  00000330  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068a  00000000  00000000  00000df8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003e6  00000000  00000000  00001482  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001868  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000038e  00000000  00000000  0000188c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004c8  00000000  00000000  00001c1a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000020e2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 23 01 	jmp	0x246	; 0x246 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
 **********************************************************************/
int main(void)
{
    // Set pin as output in Data Direction Register
    // DDRB = DDRB or 0010 0000
    DDRB = DDRB | (1<<LED_GREEN);
  80:	84 b1       	in	r24, 0x04	; 4
  82:	80 62       	ori	r24, 0x20	; 32
  84:	84 b9       	out	0x04, r24	; 4

    // Set pin LOW in Data Register (LED off)
    // PORTB = PORTB and 1101 1111
    PORTB = PORTB & ~(1<<LED_GREEN);
  86:	85 b1       	in	r24, 0x05	; 5
  88:	8f 7d       	andi	r24, 0xDF	; 223
  8a:	85 b9       	out	0x05, r24	; 5
    // Infinite loop
    while (1)
    {
        // Invert LED in Data Register
        // PORTB = PORTB and 0010 0000
        PORTB = PORTB & ~(1<<LED_GREEN);
  8c:	85 b1       	in	r24, 0x05	; 5
  8e:	8f 7d       	andi	r24, 0xDF	; 223
  90:	85 b9       	out	0x05, r24	; 5
		
		// Letter D
		PORTB = PORTB ^ (1<<LED_GREEN);		// Led on
  92:	95 b1       	in	r25, 0x05	; 5
  94:	80 e2       	ldi	r24, 0x20	; 32
  96:	98 27       	eor	r25, r24
  98:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9a:	2f ef       	ldi	r18, 0xFF	; 255
  9c:	31 ef       	ldi	r19, 0xF1	; 241
  9e:	9b e2       	ldi	r25, 0x2B	; 43
  a0:	21 50       	subi	r18, 0x01	; 1
  a2:	30 40       	sbci	r19, 0x00	; 0
  a4:	90 40       	sbci	r25, 0x00	; 0
  a6:	e1 f7       	brne	.-8      	; 0xa0 <main+0x20>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <main+0x2a>
  aa:	00 00       	nop
		_delay_ms(DASH);					// 3 units 
		PORTB = PORTB & ~(1<<LED_GREEN);	// Led off
  ac:	95 b1       	in	r25, 0x05	; 5
  ae:	9f 7d       	andi	r25, 0xDF	; 223
  b0:	95 b9       	out	0x05, r25	; 5
  b2:	2f ef       	ldi	r18, 0xFF	; 255
  b4:	35 ea       	ldi	r19, 0xA5	; 165
  b6:	9e e0       	ldi	r25, 0x0E	; 14
  b8:	21 50       	subi	r18, 0x01	; 1
  ba:	30 40       	sbci	r19, 0x00	; 0
  bc:	90 40       	sbci	r25, 0x00	; 0
  be:	e1 f7       	brne	.-8      	; 0xb8 <main+0x38>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <main+0x42>
  c2:	00 00       	nop
		_delay_ms(SHORT_DELAY);				// 1 unit
		PORTB = PORTB ^ (1<<LED_GREEN);		// Led on
  c4:	95 b1       	in	r25, 0x05	; 5
  c6:	98 27       	eor	r25, r24
  c8:	95 b9       	out	0x05, r25	; 5
  ca:	2f ef       	ldi	r18, 0xFF	; 255
  cc:	35 ea       	ldi	r19, 0xA5	; 165
  ce:	9e e0       	ldi	r25, 0x0E	; 14
  d0:	21 50       	subi	r18, 0x01	; 1
  d2:	30 40       	sbci	r19, 0x00	; 0
  d4:	90 40       	sbci	r25, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x50>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x5a>
  da:	00 00       	nop
		_delay_ms(DOT);						// 1 unit
		PORTB = PORTB & ~(1<<LED_GREEN);	// Led off
  dc:	95 b1       	in	r25, 0x05	; 5
  de:	9f 7d       	andi	r25, 0xDF	; 223
  e0:	95 b9       	out	0x05, r25	; 5
  e2:	2f ef       	ldi	r18, 0xFF	; 255
  e4:	35 ea       	ldi	r19, 0xA5	; 165
  e6:	9e e0       	ldi	r25, 0x0E	; 14
  e8:	21 50       	subi	r18, 0x01	; 1
  ea:	30 40       	sbci	r19, 0x00	; 0
  ec:	90 40       	sbci	r25, 0x00	; 0
  ee:	e1 f7       	brne	.-8      	; 0xe8 <main+0x68>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <main+0x72>
  f2:	00 00       	nop
		_delay_ms(SHORT_DELAY);				// 1 unit
		PORTB = PORTB ^ (1<<LED_GREEN);		// Led on
  f4:	95 b1       	in	r25, 0x05	; 5
  f6:	98 27       	eor	r25, r24
  f8:	95 b9       	out	0x05, r25	; 5
  fa:	2f ef       	ldi	r18, 0xFF	; 255
  fc:	35 ea       	ldi	r19, 0xA5	; 165
  fe:	9e e0       	ldi	r25, 0x0E	; 14
 100:	21 50       	subi	r18, 0x01	; 1
 102:	30 40       	sbci	r19, 0x00	; 0
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <main+0x80>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x8a>
 10a:	00 00       	nop
		_delay_ms(DOT);						// 1 unit
		
		// Gap between the letters
		PORTB = PORTB & ~(1<<LED_GREEN);	// Led off
 10c:	95 b1       	in	r25, 0x05	; 5
 10e:	9f 7d       	andi	r25, 0xDF	; 223
 110:	95 b9       	out	0x05, r25	; 5
 112:	2f ef       	ldi	r18, 0xFF	; 255
 114:	31 ef       	ldi	r19, 0xF1	; 241
 116:	9b e2       	ldi	r25, 0x2B	; 43
 118:	21 50       	subi	r18, 0x01	; 1
 11a:	30 40       	sbci	r19, 0x00	; 0
 11c:	90 40       	sbci	r25, 0x00	; 0
 11e:	e1 f7       	brne	.-8      	; 0x118 <main+0x98>
 120:	00 c0       	rjmp	.+0      	; 0x122 <main+0xa2>
 122:	00 00       	nop
		_delay_ms(LONG_DELAY);				// 1 unit
		
		// Letter E
		PORTB = PORTB ^ (1<<LED_GREEN);		// Led on
 124:	95 b1       	in	r25, 0x05	; 5
 126:	98 27       	eor	r25, r24
 128:	95 b9       	out	0x05, r25	; 5
 12a:	2f ef       	ldi	r18, 0xFF	; 255
 12c:	35 ea       	ldi	r19, 0xA5	; 165
 12e:	9e e0       	ldi	r25, 0x0E	; 14
 130:	21 50       	subi	r18, 0x01	; 1
 132:	30 40       	sbci	r19, 0x00	; 0
 134:	90 40       	sbci	r25, 0x00	; 0
 136:	e1 f7       	brne	.-8      	; 0x130 <main+0xb0>
 138:	00 c0       	rjmp	.+0      	; 0x13a <main+0xba>
 13a:	00 00       	nop
		_delay_ms(DOT);						// 1 unit
		
		// Gap between the letters
		PORTB = PORTB & ~(1<<LED_GREEN);	// Led off
 13c:	95 b1       	in	r25, 0x05	; 5
 13e:	9f 7d       	andi	r25, 0xDF	; 223
 140:	95 b9       	out	0x05, r25	; 5
 142:	2f ef       	ldi	r18, 0xFF	; 255
 144:	31 ef       	ldi	r19, 0xF1	; 241
 146:	9b e2       	ldi	r25, 0x2B	; 43
 148:	21 50       	subi	r18, 0x01	; 1
 14a:	30 40       	sbci	r19, 0x00	; 0
 14c:	90 40       	sbci	r25, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <main+0xc8>
 150:	00 c0       	rjmp	.+0      	; 0x152 <main+0xd2>
 152:	00 00       	nop
		_delay_ms(LONG_DELAY);				// 3 units
		
		// Number 2
		PORTB = PORTB ^ (1<<LED_GREEN);		// Led on
 154:	95 b1       	in	r25, 0x05	; 5
 156:	98 27       	eor	r25, r24
 158:	95 b9       	out	0x05, r25	; 5
 15a:	2f ef       	ldi	r18, 0xFF	; 255
 15c:	35 ea       	ldi	r19, 0xA5	; 165
 15e:	9e e0       	ldi	r25, 0x0E	; 14
 160:	21 50       	subi	r18, 0x01	; 1
 162:	30 40       	sbci	r19, 0x00	; 0
 164:	90 40       	sbci	r25, 0x00	; 0
 166:	e1 f7       	brne	.-8      	; 0x160 <main+0xe0>
 168:	00 c0       	rjmp	.+0      	; 0x16a <main+0xea>
 16a:	00 00       	nop
		_delay_ms(DOT);						// 1 unit
		PORTB = PORTB & ~(1<<LED_GREEN);	// Led off
 16c:	95 b1       	in	r25, 0x05	; 5
 16e:	9f 7d       	andi	r25, 0xDF	; 223
 170:	95 b9       	out	0x05, r25	; 5
 172:	2f ef       	ldi	r18, 0xFF	; 255
 174:	35 ea       	ldi	r19, 0xA5	; 165
 176:	9e e0       	ldi	r25, 0x0E	; 14
 178:	21 50       	subi	r18, 0x01	; 1
 17a:	30 40       	sbci	r19, 0x00	; 0
 17c:	90 40       	sbci	r25, 0x00	; 0
 17e:	e1 f7       	brne	.-8      	; 0x178 <main+0xf8>
 180:	00 c0       	rjmp	.+0      	; 0x182 <main+0x102>
 182:	00 00       	nop
		_delay_ms(SHORT_DELAY);				// 1 unit
		PORTB = PORTB ^ (1<<LED_GREEN);		// Led on
 184:	95 b1       	in	r25, 0x05	; 5
 186:	98 27       	eor	r25, r24
 188:	95 b9       	out	0x05, r25	; 5
 18a:	2f ef       	ldi	r18, 0xFF	; 255
 18c:	35 ea       	ldi	r19, 0xA5	; 165
 18e:	9e e0       	ldi	r25, 0x0E	; 14
 190:	21 50       	subi	r18, 0x01	; 1
 192:	30 40       	sbci	r19, 0x00	; 0
 194:	90 40       	sbci	r25, 0x00	; 0
 196:	e1 f7       	brne	.-8      	; 0x190 <main+0x110>
 198:	00 c0       	rjmp	.+0      	; 0x19a <main+0x11a>
 19a:	00 00       	nop
		_delay_ms(DOT);						// 1 unit
		PORTB = PORTB & ~(1<<LED_GREEN);	// Led off
 19c:	95 b1       	in	r25, 0x05	; 5
 19e:	9f 7d       	andi	r25, 0xDF	; 223
 1a0:	95 b9       	out	0x05, r25	; 5
 1a2:	2f ef       	ldi	r18, 0xFF	; 255
 1a4:	35 ea       	ldi	r19, 0xA5	; 165
 1a6:	9e e0       	ldi	r25, 0x0E	; 14
 1a8:	21 50       	subi	r18, 0x01	; 1
 1aa:	30 40       	sbci	r19, 0x00	; 0
 1ac:	90 40       	sbci	r25, 0x00	; 0
 1ae:	e1 f7       	brne	.-8      	; 0x1a8 <main+0x128>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <main+0x132>
 1b2:	00 00       	nop
		_delay_ms(SHORT_DELAY);				// 1 unit
		PORTB = PORTB ^ (1<<LED_GREEN);		// Led on
 1b4:	95 b1       	in	r25, 0x05	; 5
 1b6:	98 27       	eor	r25, r24
 1b8:	95 b9       	out	0x05, r25	; 5
 1ba:	2f ef       	ldi	r18, 0xFF	; 255
 1bc:	31 ef       	ldi	r19, 0xF1	; 241
 1be:	9b e2       	ldi	r25, 0x2B	; 43
 1c0:	21 50       	subi	r18, 0x01	; 1
 1c2:	30 40       	sbci	r19, 0x00	; 0
 1c4:	90 40       	sbci	r25, 0x00	; 0
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <main+0x140>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <main+0x14a>
 1ca:	00 00       	nop
		_delay_ms(DASH);					// 3 units
		PORTB = PORTB & ~(1<<LED_GREEN);	// Led off
 1cc:	95 b1       	in	r25, 0x05	; 5
 1ce:	9f 7d       	andi	r25, 0xDF	; 223
 1d0:	95 b9       	out	0x05, r25	; 5
 1d2:	2f ef       	ldi	r18, 0xFF	; 255
 1d4:	35 ea       	ldi	r19, 0xA5	; 165
 1d6:	9e e0       	ldi	r25, 0x0E	; 14
 1d8:	21 50       	subi	r18, 0x01	; 1
 1da:	30 40       	sbci	r19, 0x00	; 0
 1dc:	90 40       	sbci	r25, 0x00	; 0
 1de:	e1 f7       	brne	.-8      	; 0x1d8 <main+0x158>
 1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <main+0x162>
 1e2:	00 00       	nop
		_delay_ms(SHORT_DELAY);				// 1 unit
		PORTB = PORTB ^ (1<<LED_GREEN);		// Led on
 1e4:	95 b1       	in	r25, 0x05	; 5
 1e6:	98 27       	eor	r25, r24
 1e8:	95 b9       	out	0x05, r25	; 5
 1ea:	2f ef       	ldi	r18, 0xFF	; 255
 1ec:	31 ef       	ldi	r19, 0xF1	; 241
 1ee:	9b e2       	ldi	r25, 0x2B	; 43
 1f0:	21 50       	subi	r18, 0x01	; 1
 1f2:	30 40       	sbci	r19, 0x00	; 0
 1f4:	90 40       	sbci	r25, 0x00	; 0
 1f6:	e1 f7       	brne	.-8      	; 0x1f0 <main+0x170>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <main+0x17a>
 1fa:	00 00       	nop
		_delay_ms(DASH);					// 3 units
		PORTB = PORTB & ~(1<<LED_GREEN);	// Led off
 1fc:	95 b1       	in	r25, 0x05	; 5
 1fe:	9f 7d       	andi	r25, 0xDF	; 223
 200:	95 b9       	out	0x05, r25	; 5
 202:	2f ef       	ldi	r18, 0xFF	; 255
 204:	35 ea       	ldi	r19, 0xA5	; 165
 206:	9e e0       	ldi	r25, 0x0E	; 14
 208:	21 50       	subi	r18, 0x01	; 1
 20a:	30 40       	sbci	r19, 0x00	; 0
 20c:	90 40       	sbci	r25, 0x00	; 0
 20e:	e1 f7       	brne	.-8      	; 0x208 <main+0x188>
 210:	00 c0       	rjmp	.+0      	; 0x212 <main+0x192>
 212:	00 00       	nop
		_delay_ms(SHORT_DELAY);				// 1 unit
		PORTB = PORTB ^ (1<<LED_GREEN);		// Led on
 214:	95 b1       	in	r25, 0x05	; 5
 216:	89 27       	eor	r24, r25
 218:	85 b9       	out	0x05, r24	; 5
 21a:	2f ef       	ldi	r18, 0xFF	; 255
 21c:	31 ef       	ldi	r19, 0xF1	; 241
 21e:	8b e2       	ldi	r24, 0x2B	; 43
 220:	21 50       	subi	r18, 0x01	; 1
 222:	30 40       	sbci	r19, 0x00	; 0
 224:	80 40       	sbci	r24, 0x00	; 0
 226:	e1 f7       	brne	.-8      	; 0x220 <main+0x1a0>
 228:	00 c0       	rjmp	.+0      	; 0x22a <main+0x1aa>
 22a:	00 00       	nop
		_delay_ms(DASH);					// 3 units
		
		// Gap between the letters
		PORTB = PORTB & ~(1<<LED_GREEN);	// Led off
 22c:	85 b1       	in	r24, 0x05	; 5
 22e:	8f 7d       	andi	r24, 0xDF	; 223
 230:	85 b9       	out	0x05, r24	; 5
 232:	9f ef       	ldi	r25, 0xFF	; 255
 234:	29 e8       	ldi	r18, 0x89	; 137
 236:	36 e6       	ldi	r19, 0x66	; 102
 238:	91 50       	subi	r25, 0x01	; 1
 23a:	20 40       	sbci	r18, 0x00	; 0
 23c:	30 40       	sbci	r19, 0x00	; 0
 23e:	e1 f7       	brne	.-8      	; 0x238 <main+0x1b8>
 240:	00 c0       	rjmp	.+0      	; 0x242 <main+0x1c2>
 242:	00 00       	nop
 244:	23 cf       	rjmp	.-442    	; 0x8c <main+0xc>

00000246 <_exit>:
 246:	f8 94       	cli

00000248 <__stop_program>:
 248:	ff cf       	rjmp	.-2      	; 0x248 <__stop_program>
